version: 2.1
jobs:
  build:
    docker:
      - image: cimg/node:20.6.0
    steps:
      - checkout
      - run:
          name: Install rsync
          command: |
            sudo apt-get update
            sudo apt-get install -y rsync
      - run:
          name: Debug Home Directory
          command: |
            echo "Contents of $HOME:"
            ls -la $HOME      
      - run:
          name: Copy all files and folders to /home/circleci/project/pingpong
          command: rsync -avz $HOME/project/ $HOME/project/pingpong # $HOME = /home/circleci
      - run:
          name: Debug Home Directory
          command: |
            echo "Contents of $HOME:"
            ls -la $HOME
      - run:
          name: Install Dependencies
          command: |
            cd $HOME/project/pingpong
            npm install
      - run:
          name: Create kubeconfig directory if not exists
          command: mkdir -p $HOME/.kube      
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - . # This includes all files and subdirectories in the specified path
      - run:
          name: Debug Home Directory
          command: |
            echo "Contents of $HOME:"
            ls -la $HOME/project/pingpong

  push:
    docker:
      - image: cimg/base:2023.08
    steps:
      - attach_workspace:
          at: /home/circleci
      - setup_remote_docker:
          version: "20.10.11"
          docker_layer_caching: true # Enable Docker layer caching if needed
      - run:
          name: List Workspace Contents
          command: ls -la /home/circleci/project/pingpong
      - run:
          name: Push image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            cd /home/circleci/project/pingpong
            docker build -t demodynamics/webserver:1.0.0 .
            docker push demodynamics/webserver:1.0.0


  deploy:
    docker:
      - image: cimg/base:2023.09
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Copy kubeconfig
          command: cp /home/circleci/project/pingpong/kubeconfig.yaml /home/circleci/.kube/config
      - run:
          name: Install Helm
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
            helm version  # Check Helm version to verify installation    
      - run:
          name: Deploy with Helm
          command: |
            export HELM_RELEASE_NAME=$(cat /home/circleci/project/pingpong/webserver/Chart.yaml | grep -m 1 name: | awk '{print $2}')
            export HELM_CHART_PATH="/home/circleci/project/pingpong/webserver"
            export KUBE_NAMESPACE=default
            helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_PATH --namespace $KUBE_NAMESPACE
            

workflows:
  build-push:
    jobs:
      - build
      - push:
          requires:
            - build
      - deploy:
          requires:
            - push

